name: Deploy FastAPI App

on:
  push:
    branches:
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t nidhip24/cas:latest .

      # Step 4: Create .env.prod file
      - name: Create .env.prod
        run: |
          echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> .env.prod
          echo "API_VERSION=${{ secrets.API_VERSION }}" >> .env.prod
          echo "ENV=${{ secrets.ENV }}" >> .env.prod
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env.prod

          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env.prod
          echo "FIRST_SUPERUSER_USERNAME=${{ secrets.FIRST_SUPERUSER_USERNAME }}" >> .env.prod
          echo "FIRST_SUPERUSER_EMAIL=${{ secrets.FIRST_SUPERUSER_EMAIL }}" >> .env.prod
          echo "FIRST_SUPERUSER_PASSWORD=${{ secrets.FIRST_SUPERUSER_PASSWORD }}" >> .env.prod
          
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env.prod
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env.prod
          echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> .env.prod
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env.prod
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env.prod

          echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env.prod
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env.prod

          echo "PROTECTED_PATHS=${{ secrets.PROTECTED_PATHS }}" >> .env.prod

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push nidhip24/cas:latest

      # Step 6: Pull the latest Docker image
      - name: Pull the Latest Image
        run: docker pull nidhip24/cas:latest

      # Step 7: Deploy the Docker image to the remote server
      - name: Deploy to Remote Server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${{ secrets.API_SERVER_USER }}@${{ secrets.API_SERVER }} << 'EOF'
            docker pull nidhip24/cas:latest
            docker stop cas_app || true
            docker rm cas_app || true
            docker run -d \
              --name cas_app \
              -p 8000:8000 \
              --env-file /path/to/.env.prod \
              nidhip24/cas:latest
          EOF
        env:
          API_SERVER_USER: ${{ secrets.API_SERVER_USER }}
          API_SERVER: ${{ secrets.API_SERVER }}
